@BASE_URL = http://localhost:3333
@API_URL = http://localhost:3000/api

### ========================================
### AUTHENTIFICATION
### ========================================

### 1. Connexion utilisateur valide
# @name loginUser
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "marie.jacques@demo.com",
  "password": "P@nt3h0nz3_2025!"
}

### 2. Connexion admin
# @name loginAdmin
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "admin@demo.com",
  "password": "P@nt3h0nz3_2025!"
}

### 3. Connexion storekeeper
# @name loginStorekeeper
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "andree.faire@demo.com",
  "password": "P@nt3h0nz3_2025!"
}

### 4. Vérification du token utilisateur
GET {{API_URL}}/auth/verify
Authorization: Bearer {{loginUser.response.body.token}}

### 5. Test avec des identifiants invalides
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "invalid@email.com",
  "password": "wrongpassword"
}

### 6. Test avec un email manquant
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "password": "password123"
}

### 7. Test avec un mot de passe manquant
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "user@example.com"
}

### 8. Test avec un token invalide
GET {{API_URL}}/auth/verify
Authorization: Bearer invalid-token

### 9. Test sans token
GET {{API_URL}}/auth/verify

### 10. Test connexion avec un autre utilisateur
# @name loginPierre
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "pierre.laroche@demo.com",
  "password": "P@nt3h0nz3_2025!"
}

### 11. Test connexion avec Sophie
# @name loginSophie
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "sophie.olivier@demo.com",
  "password": "P@nt3h0nz3_2025!"
}

### ========================================
### ADMINISTRATION
### ========================================

### Dashboard Admin (avec token admin)
# @name dashboardAdmin
GET {{API_URL}}/admin/dashboard
Authorization: Bearer {{loginAdmin.response.body.data.token}}

### Dashboard Admin (avec token storekeeper)
# @name dashboardStorekeeper
GET {{API_URL}}/admin/dashboard
Authorization: Bearer {{loginStorekeeper.response.body.data.token}}

### Dashboard Admin (avec token client - devrait échouer)
# @name dashboardClient
GET {{API_URL}}/admin/dashboard
Authorization: Bearer {{loginUser.response.body.token}}

### Statistiques (avec token admin)
# @name statsAdmin
GET {{API_URL}}/admin/stats
Authorization: Bearer {{loginAdmin.response.body.data.token}}

### Statistiques (avec token storekeeper)
# @name statsStorekeeper
GET {{API_URL}}/admin/stats
Authorization: Bearer {{loginStorekeeper.response.body.data.token}}

### ========================================
### TESTS D'ERREURS
### ========================================

### Login avec mauvais email
# @name loginWrongEmail
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "wrong@email.com",
  "password": "password123"
}

### Login avec mauvais mot de passe
# @name loginWrongPassword
POST {{API_URL}}/auth/login
Content-Type: application/json

{
  "email": "admin@pantheonze.com",
  "password": "wrongpassword"
}

### Accès admin sans token
# @name adminNoToken
GET {{API_URL}}/admin/dashboard

### Accès admin avec token invalide
# @name adminInvalidToken
GET {{API_URL}}/admin/dashboard
Authorization: Bearer invalid_token_here
