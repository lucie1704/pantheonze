services:
  server:
    image: node:23.8.0-alpine
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: >
      sh -c "
        npm install &&
        npx prisma generate &&
        npx prisma db push &&
        npx prisma db seed &&
        exec npm run dev
      "
    ports:
      - "3333:3000"
    networks:
      - prisma-network
    depends_on:
      - mongo

  mongo:
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    ports:
      - "27017:27017"
    networks:
      - prisma-network
    environment:
      MONGO_INITDB_DATABASE: myapp
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo_data:/data/db"
      - "mongo_config:/data/configdb"

  prisma-studio:
    image: node:23.8.0-alpine
    working_dir: /app
    stop_grace_period: 1s
    volumes:
      - ./:/app
    command: npx prisma studio --port 5555 --browser none
    ports:
      - "5555:5555"
    env_file:
      - .env
    networks:
      - prisma-network
    depends_on:
      - server
    restart: unless-stopped

volumes:
  mongo_data:
  mongo_config:
  node_modules:

networks:
  prisma-network:
    name: prisma-network
